package components

// Condition - Conditions generated by this method
type Condition struct {
	// Prefix used to generate condition
	Prefix *string `json:"prefix,omitempty"`
	// Id of the parameter used to generate condition
	Parameter *string `json:"parameter,omitempty"`
}

func (o *Condition) GetPrefix() *string {
	if o == nil {
		return nil
	}
	return o.Prefix
}

func (o *Condition) GetParameter() *string {
	if o == nil {
		return nil
	}
	return o.Parameter
}

// Deprecated - Is this method deprecated?
type Deprecated struct {
	// Information notice about the deprecation, especially how to replace it
	Info *string `json:"info,omitempty"`
	// Id of the method replacing this method
	ReplacedBy *string `json:"replacedBy,omitempty"`
}

func (o *Deprecated) GetInfo() *string {
	if o == nil {
		return nil
	}
	return o.Info
}

func (o *Deprecated) GetReplacedBy() *string {
	if o == nil {
		return nil
	}
	return o.ReplacedBy
}

// Methods - List of available generic methods
type Methods struct {
	// Method id
	ID string `json:"id"`
	// Method name
	Name string `json:"name"`
	// Version of this technique
	Version string `json:"version"`
	// Category of this technique
	Category string `json:"category"`
	// Description of this method
	Desc string `json:"desc"`
	// Full documentation of this method
	Documentation string `json:"documentation"`
	// Parameters for this technique
	Parameters []MethodParameter `json:"parameters"`
	// List of agents compatible with this method
	Agents []string `json:"agents"`
	// Conditions generated by this method
	Condition Condition `json:"condition"`
	// Is this method deprecated?
	Deprecated Deprecated `json:"deprecated"`
}

func (o *Methods) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Methods) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Methods) GetVersion() string {
	if o == nil {
		return ""
	}
	return o.Version
}

func (o *Methods) GetCategory() string {
	if o == nil {
		return ""
	}
	return o.Category
}

func (o *Methods) GetDesc() string {
	if o == nil {
		return ""
	}
	return o.Desc
}

func (o *Methods) GetDocumentation() string {
	if o == nil {
		return ""
	}
	return o.Documentation
}

func (o *Methods) GetParameters() []MethodParameter {
	if o == nil {
		return []MethodParameter{}
	}
	return o.Parameters
}

func (o *Methods) GetAgents() []string {
	if o == nil {
		return []string{}
	}
	return o.Agents
}

func (o *Methods) GetCondition() Condition {
	if o == nil {
		return Condition{}
	}
	return o.Condition
}

func (o *Methods) GetDeprecated() Deprecated {
	if o == nil {
		return Deprecated{}
	}
	return o.Deprecated
}
